apply plugin: 'com.android.library'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int

        versionCode = VERSION_CODE as int
        versionName = VERSION_NAME

        renderscriptTargetApi MIN_SDK_VERSION as int
        renderscriptSupportModeEnabled true


    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a','arm64-v8a'
            universalApk false
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        pickFirst 'META-INF/maven/org.bytedeco.javacpp-presets/opencv/pom.properties'
        pickFirst 'META-INF/maven/org.bytedeco.javacpp-presets/opencv/pom.xml'
        pickFirst 'META-INF/maven/org.bytedeco.javacpp-presets/ffmpeg/pom.properties'
        pickFirst 'META-INF/maven/org.bytedeco.javacpp-presets/ffmpeg/pom.xml'
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':bluetoothlibarary')
//    compile project(':bcnetechlibrary')
    api project(':bcnetchhttp')
    api project(':imageproc')
    api project(':library')
}
