// Generated by data binding compiler. Do not edit!
package com.bcnetech.hyphoto.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import com.bcnetech.bcnetechlibrary.view.stickygridheaders.StickyGridHeadersGridView;
import com.bcnetech.hyphoto.R;
import com.bcnetech.hyphoto.ui.view.AlbumNewTopSelectView;
import com.bcnetech.hyphoto.ui.view.BottomToolView;
import com.bcnetech.hyphoto.ui.view.TitleView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AblumNewLayoutBinding extends ViewDataBinding {
  @NonNull
  public final AlbumNewTopSelectView albumNewTopSelectView;

  @NonNull
  public final RelativeLayout bottomLayout;

  @NonNull
  public final BottomToolView bottomToolView;

  @NonNull
  public final StickyGridHeadersGridView gridView;

  @NonNull
  public final TitleView titleLayout;

  @NonNull
  public final RelativeLayout topLayout;

  protected AblumNewLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AlbumNewTopSelectView albumNewTopSelectView, RelativeLayout bottomLayout,
      BottomToolView bottomToolView, StickyGridHeadersGridView gridView, TitleView titleLayout,
      RelativeLayout topLayout) {
    super(_bindingComponent, _root, _localFieldCount);
    this.albumNewTopSelectView = albumNewTopSelectView;
    this.bottomLayout = bottomLayout;
    this.bottomToolView = bottomToolView;
    this.gridView = gridView;
    this.titleLayout = titleLayout;
    this.topLayout = topLayout;
  }

  @NonNull
  public static AblumNewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.ablum_new_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AblumNewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AblumNewLayoutBinding>inflateInternal(inflater, R.layout.ablum_new_layout, root, attachToRoot, component);
  }

  @NonNull
  public static AblumNewLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.ablum_new_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AblumNewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AblumNewLayoutBinding>inflateInternal(inflater, R.layout.ablum_new_layout, null, false, component);
  }

  public static AblumNewLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AblumNewLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (AblumNewLayoutBinding)bind(component, view, R.layout.ablum_new_layout);
  }
}
