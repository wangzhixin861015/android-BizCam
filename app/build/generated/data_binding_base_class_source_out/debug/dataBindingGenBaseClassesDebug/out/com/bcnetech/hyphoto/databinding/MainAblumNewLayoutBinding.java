// Generated by data binding compiler. Do not edit!
package com.bcnetech.hyphoto.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.bcnetech.hyphoto.R;
import com.bcnetech.hyphoto.ui.view.AlbumViewPager;
import com.bcnetech.hyphoto.ui.view.BlueToothListNewView;
import com.bcnetech.hyphoto.ui.view.DrawerView;
import com.bcnetech.hyphoto.ui.view.ImageNewUtilsView;
import com.bcnetech.hyphoto.ui.view.ShowFake3DView;
import com.bcnetech.hyphoto.ui.view.VideoView;
import com.bcnetech.hyphoto.ui.view.photoview.PhotoView;
import com.bcnetech.hyphoto.ui.view.viewPagerIndicator.view.indicator.FixedIndicatorView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class MainAblumNewLayoutBinding extends ViewDataBinding {
  @NonNull
  public final ImageView bgBlur;

  @NonNull
  public final LinearLayout bgBlurLine;

  @NonNull
  public final AlbumViewPager bigImgview;

  @NonNull
  public final BlueToothListNewView blueToothListView;

  @NonNull
  public final ImageView blurImageview;

  @NonNull
  public final RelativeLayout contentRel;

  @NonNull
  public final ImageView down;

  @NonNull
  public final DrawerView drawerview;

  @NonNull
  public final ImageNewUtilsView imageUtilsView;

  @NonNull
  public final AblumNewLayoutBinding include;

  @NonNull
  public final FixedIndicatorView indicatorView;

  @NonNull
  public final RelativeLayout mablum;

  @NonNull
  public final TextView name;

  @NonNull
  public final LinearLayout newCam;

  @NonNull
  public final LinearLayout newShop;

  @NonNull
  public final RelativeLayout panelContent;

  @NonNull
  public final LinearLayout panelHandle;

  @NonNull
  public final PhotoView photoView;

  @NonNull
  public final RelativeLayout rlBigImage;

  @NonNull
  public final RelativeLayout sviewPager;

  @NonNull
  public final ImageView up;

  @NonNull
  public final ShowFake3DView viewPagerFake3dview;

  @NonNull
  public final VideoView viewPagerVideoView;

  protected MainAblumNewLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView bgBlur, LinearLayout bgBlurLine, AlbumViewPager bigImgview,
      BlueToothListNewView blueToothListView, ImageView blurImageview, RelativeLayout contentRel,
      ImageView down, DrawerView drawerview, ImageNewUtilsView imageUtilsView,
      AblumNewLayoutBinding include, FixedIndicatorView indicatorView, RelativeLayout mablum,
      TextView name, LinearLayout newCam, LinearLayout newShop, RelativeLayout panelContent,
      LinearLayout panelHandle, PhotoView photoView, RelativeLayout rlBigImage,
      RelativeLayout sviewPager, ImageView up, ShowFake3DView viewPagerFake3dview,
      VideoView viewPagerVideoView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bgBlur = bgBlur;
    this.bgBlurLine = bgBlurLine;
    this.bigImgview = bigImgview;
    this.blueToothListView = blueToothListView;
    this.blurImageview = blurImageview;
    this.contentRel = contentRel;
    this.down = down;
    this.drawerview = drawerview;
    this.imageUtilsView = imageUtilsView;
    this.include = include;
    setContainedBinding(this.include);
    this.indicatorView = indicatorView;
    this.mablum = mablum;
    this.name = name;
    this.newCam = newCam;
    this.newShop = newShop;
    this.panelContent = panelContent;
    this.panelHandle = panelHandle;
    this.photoView = photoView;
    this.rlBigImage = rlBigImage;
    this.sviewPager = sviewPager;
    this.up = up;
    this.viewPagerFake3dview = viewPagerFake3dview;
    this.viewPagerVideoView = viewPagerVideoView;
  }

  @NonNull
  public static MainAblumNewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.main_ablum_new_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static MainAblumNewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<MainAblumNewLayoutBinding>inflateInternal(inflater, R.layout.main_ablum_new_layout, root, attachToRoot, component);
  }

  @NonNull
  public static MainAblumNewLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.main_ablum_new_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static MainAblumNewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<MainAblumNewLayoutBinding>inflateInternal(inflater, R.layout.main_ablum_new_layout, null, false, component);
  }

  public static MainAblumNewLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static MainAblumNewLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (MainAblumNewLayoutBinding)bind(component, view, R.layout.main_ablum_new_layout);
  }
}
